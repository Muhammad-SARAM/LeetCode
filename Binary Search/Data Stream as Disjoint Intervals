class SummaryRanges {
public:
    set<int> starts,ends;
    SummaryRanges() {
        starts.clear();
        ends.clear();
    }
    
    void addNum(int value) {
        if (starts.size()>0 and ends.size()>0)
        {
            auto x=starts.upper_bound(value);
            x--;
            auto y=ends.lower_bound(value);
            if (distance(starts.begin(),x)==distance(ends.begin(),y) and value>=*x and value<=*y)
                return;
        }
        if (starts.find(value+1)!=starts.end() and ends.find(value-1)!=ends.end())
        {
            starts.erase(value+1);
            ends.erase(value-1);
        }
        else if(starts.find(value+1)!=starts.end())
        {
            starts.erase(value+1);
            starts.insert(value);
        }
        else if(ends.find(value-1)!=ends.end())
        {
            ends.erase(value-1);
            ends.insert(value);
        }
        else
        {
            starts.insert(value);
            ends.insert(value);
        }
    }
    
    vector<vector<int>> getIntervals() {
        vector<vector<int>> ans;
        for (int i:starts)
            ans.push_back({i});
        int j=0;
        for (int i:ends)
        {
            ans[j].push_back(i);
            j++;
        }
        for (auto i:ans)
            cout<<i[0]<<' '<<i[1]<<endl;
        cout<<endl;
        return ans;
    }
};

/**
 * Your SummaryRanges object will be instantiated and called as such:
 * SummaryRanges* obj = new SummaryRanges();
 * obj->addNum(value);
 * vector<vector<int>> param_2 = obj->getIntervals();
 */
