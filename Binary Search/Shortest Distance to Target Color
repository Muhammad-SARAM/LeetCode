class Solution {
public:
    vector<int> shortestDistanceColor(vector<int>& colors, vector<vector<int>>& queries) {
        vector<int> co[3],ans;
        for (int i=0;i<colors.size();i++)
            co[colors[i]-1].push_back(i);
        for (auto j:queries)
        {
            int st=0,en=co[j[1]-1].size();
            while (st+1<en)
            {
                int mid=(st+en)/2;
                if (co[j[1]-1][mid]<j[0])
                    st=mid+1;
                else
                    en=mid+1;
                if (st+2==en)
                {
                    if (co[j[1]-1][st]<=j[0])
                        st++;
                    break;
                }
            }
            if (co[j[1]-1].size()==0)
            {
                ans.push_back(-1);
                continue;
            }
            else if(st!=0)
                if (!(st<co[j[1]-1].size()) or j[0]-co[j[1]-1][st-1]<co[j[1]-1][st]-j[0])
                    st--;
            ans.push_back(abs(co[j[1]-1][st]-j[0]));
        }
        return ans;
    }
};
